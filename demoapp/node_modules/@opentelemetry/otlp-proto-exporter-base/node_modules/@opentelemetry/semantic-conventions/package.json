{
  "_from": "@opentelemetry/semantic-conventions@1.14.0",
  "_id": "@opentelemetry/semantic-conventions@1.14.0",
  "_inBundle": false,
  "_integrity": "sha512-rJfCY8rCWz3cb4KI6pEofnytvMPuj3YLQwoscCCYZ5DkdiPjo15IQ0US7+mjcWy9H3fcZIzf2pbJZ7ck/h4tug==",
  "_location": "/@opentelemetry/otlp-proto-exporter-base/@opentelemetry/semantic-conventions",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "@opentelemetry/semantic-conventions@1.14.0",
    "name": "@opentelemetry/semantic-conventions",
    "escapedName": "@opentelemetry%2fsemantic-conventions",
    "scope": "@opentelemetry",
    "rawSpec": "1.14.0",
    "saveSpec": null,
    "fetchSpec": "1.14.0"
  },
  "_requiredBy": [
    "/@opentelemetry/otlp-proto-exporter-base/@opentelemetry/core"
  ],
  "_resolved": "https://registry.npmjs.org/@opentelemetry/semantic-conventions/-/semantic-conventions-1.14.0.tgz",
  "_shasum": "6a729b7f372ce30f77a3f217c09bc216f863fccb",
  "_spec": "@opentelemetry/semantic-conventions@1.14.0",
  "_where": "/tmp/kcd-munich-2023-fflag-workshop/demoapp/node_modules/@opentelemetry/otlp-proto-exporter-base/node_modules/@opentelemetry/core",
  "author": {
    "name": "OpenTelemetry Authors"
  },
  "bugs": {
    "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
  },
  "bundleDependencies": false,
  "deprecated": false,
  "description": "OpenTelemetry semantic conventions",
  "devDependencies": {
    "@types/mocha": "10.0.0",
    "@types/node": "18.6.5",
    "@types/sinon": "10.0.13",
    "codecov": "3.8.3",
    "mocha": "10.0.0",
    "nock": "13.0.11",
    "nyc": "15.1.0",
    "sinon": "15.0.0",
    "ts-mocha": "10.0.0",
    "typescript": "4.4.4"
  },
  "engines": {
    "node": ">=14"
  },
  "esnext": "build/esnext/index.js",
  "files": [
    "build/esm/**/*.js",
    "build/esm/**/*.js.map",
    "build/esm/**/*.d.ts",
    "build/esnext/**/*.js",
    "build/esnext/**/*.js.map",
    "build/esnext/**/*.d.ts",
    "build/src/**/*.js",
    "build/src/**/*.js.map",
    "build/src/**/*.d.ts",
    "doc",
    "LICENSE",
    "README.md"
  ],
  "gitHead": "edebbcc757535bc88f01340409dbbecc0bb6ccf8",
  "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-semantic-conventions",
  "keywords": [
    "opentelemetry",
    "nodejs",
    "tracing",
    "attributes",
    "semantic conventions"
  ],
  "license": "Apache-2.0",
  "main": "build/src/index.js",
  "module": "build/esm/index.js",
  "name": "@opentelemetry/semantic-conventions",
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
  },
  "scripts": {
    "clean": "tsc --build --clean tsconfig.json tsconfig.esm.json tsconfig.esnext.json",
    "compile": "tsc --build tsconfig.json tsconfig.esm.json tsconfig.esnext.json",
    "lint": "eslint . --ext .ts",
    "lint:fix": "eslint . --ext .ts --fix",
    "peer-api-check": "node ../../scripts/peer-api-check.js",
    "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
    "prepublishOnly": "npm run compile",
    "prewatch": "npm run precompile",
    "version": "node ../../scripts/version-update.js",
    "watch": "tsc --build --watch tsconfig.json tsconfig.esm.json tsconfig.esnext.json"
  },
  "sideEffects": false,
  "types": "build/src/index.d.ts",
  "version": "1.14.0"
}
